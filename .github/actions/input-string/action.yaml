name: Verify input string
description: This action verifies if the input string is of valid format for parallel deployment in all regions.

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get the event name
      shell: bash
      run: |
        echo "Event name: ${{ github.event_name }}"
      
    - name: Get PR title in a Pull request review event
      if: ${{ github.event_name == 'pull_request_review' }}
      uses: ./.github/actions/pr-title

    - name: Get PR title in a Pull request event
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./.github/actions/gpr-title      

  

    - name: Check existence of preprod and prod strings in the PR title
      shell: bash
      run: |
        inputstring="${{ env.INPUT_STRING }}"
        echo $inputstring
        echo ${{ github.event.pull_request.base.ref }}
        if [[ ${{ github.event.pull_request.base.ref }} == 'preproduction' ]]; then
          if [[ "$inputstring" =~ 'preprod' || "$inputstring" =~ 'Preprod' ]]; then                    
            echo "$inputstring is valid for preprod deployment."
          else
            echo "$inputstring is not valid for preprod deployment as it doesnot contains 'preprod/Preprod' in PR title."
            exit 1
          fi  
        fi
        if [[ ${{ github.event.pull_request.base.ref }} == 'production' ]]; then
          if [[ "$inputstring" =~ 'prod' || "$inputstring" =~ 'Prod' ]]; then                    
            echo "$inputstring is valid for prod deployment."
          else
            echo "$inputstring is not valid for prod deployment as it doesnot contains 'prod/Prod' in PR title."
            exit 1
          fi 
        fi
    - name: Verify Input string
      shell: bash
      run: |
        inputstring="${{ env.INPUT_STRING }}"
        switch=0
        echo $inputstring
        if [[ $inputstring =~ ^\[[a-zA-Z]+\/[a-zA-Z]+\/[a-zA-Z]+\]:( [a-zA-Z0-9]+)* ]]; then
          echo "$inputstring matches the required format."
          ap_region=$(echo $inputstring | cut -d "]" -f1 | sed 's/^\[//' | cut -d/ -f1 | tr '[:upper:]' '[:lower:]')
          eu_region=$(echo $inputstring | cut -d "]" -f1 | sed 's/^\[//' | cut -d/ -f2 | tr '[:upper:]' '[:lower:]')
          us_region=$(echo $inputstring | cut -d "]" -f1 | sed 's/^\[//' | cut -d/ -f3 | tr '[:upper:]' '[:lower:]')
          echo $ap_region
          echo $eu_region
          echo $us_region

          if [[ $us_region == 'us' ]]; then                    
            echo "$us_region is valid and is present in one of us, eu, ap."
          else
            echo "$us_region is not valid. Please use one of the allowed region us, eu, ap."
            exit 1
          fi  

          if [[ $eu_region == 'eu' ]]; then                    
            echo "$eu_region is valid and is present in one of us, eu, ap."
          else
            echo "$eu_region is not valid. Please use one of the allowed region us, eu, ap."
            exit 1
          fi

          if [[ $ap_region == 'ap' ]]; then                    
            echo "$ap_region is valid and is present in one of us, eu, ap."          
          else
            echo "$ap_region is not valid. Please use one of the allowed region us, eu, ap."
            exit 1
          fi

        else
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo 'PR title is not of correct format. Please update PR title.'
          elif [[ ${{ github.event_name }} == 'push' ]]; then
            echo 'Commit message is not of correct format. Please recommit and push.'
          fi
          exit 1
        fi
